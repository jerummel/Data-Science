'''Proiect Euler Problem 44
Pentagonal numbers are generated by the formula, Pn= n*(3*n-1)/2
Find the pair of pentagonal numbers, Pk and Pj, for which their sum 
and difference are pentagonal and D = |Pk - Pj| is minimised.
Output D'''

def main():
	# I selected the upper bound for pentagonals through trial and error.
	# If nothing was outputted, then the upper bound wasn't big enough,
	# so I increased the upper bound and ran it again until there was output.
	pentagonals = [n*(3*n-1)/2 for n in range(1, 3000)]
	bothPentagonal = False
	for idx, D in enumerate(pentagonals):
		if idx < len(pentagonals)-1:
			i=idx+1
		else:
			break
		while pentagonals[i] - pentagonals[i-1] <= D:
			Pk = pentagonals[i]
			Pj =  Pk - D
			# We already know Pk and D are pentagonal.  We need to determine if Pj and Pj+Pk are pentagonal.
			if Pj in pentagonals:
				if Pj+Pk in pentagonals:
					bothPentagonal = True
					break
			i+=1
			if i == len(pentagonals):
				break
		if(bothPentagonal):
			print D
			break
		
if __name__ == "__main__":
    main()